[project]
name = "diagram-api-service"
version = "0.1.0"
description = "An async Python API service that creates diagrams from natural language descriptions."
authors = [
    {name = "Gemini"}
]
license = "MIT"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi",
    "uvicorn[standard]",
    "openai>=1.40.0",
    "diagrams",
    "pydantic",
    "pydantic-settings",
    "anyio"
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "httpx",
    "pre-commit",
    "ruff"
]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "PL",  # pylint
]
ignore = [
    "E501",  # line too long, handled by ruff format
    "B008",  # do not perform function calls in argument defaults
    "PLR0913",  # too many arguments
    "PLR0912",  # too many branches
    "PLR0915",  # too many statements
    "PLR2004",  # magic value comparison
    "E712",   # avoid equality comparisons to True/False
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["app"]
